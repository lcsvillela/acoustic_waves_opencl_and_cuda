//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-34280977
// Unknown Toolkit Version
// Based on NVVM 7.0.1
//

.version 8.2
.target sm_89, texmode_independent
.address_size 64

	// .globl	initialize_u

.entry initialize_u(
	.param .u64 .ptr .global .align 8 initialize_u_param_0,
	.param .u32 initialize_u_param_1,
	.param .u32 initialize_u_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [initialize_u_param_0];
	ld.param.u32 	%r3, [initialize_u_param_1];
	ld.param.u32 	%r4, [initialize_u_param_2];
	mov.b32 	%r5, %envreg3;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r9, %r8, %r5;
	mad.lo.s32 	%r1, %r7, %r6, %r9;
	mov.u32 	%r10, %ctaid.y;
	mov.u32 	%r11, %ntid.y;
	mov.u32 	%r12, %tid.y;
	mov.b32 	%r13, %envreg4;
	add.s32 	%r14, %r12, %r13;
	mad.lo.s32 	%r2, %r11, %r10, %r14;
	setp.ge.s32 	%p1, %r1, %r3;
	setp.ge.s32 	%p2, %r2, %r4;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB0_2;

	mad.lo.s32 	%r15, %r2, %r3, %r1;
	mul.wide.s32 	%rd2, %r15, 8;
	add.s64 	%rd3, %rd1, %rd2;
	mov.u64 	%rd4, 0;
	st.global.u64 	[%rd3], %rd4;

$L__BB0_2:
	ret;

}
	// .globl	define_c
.entry define_c(
	.param .u64 .ptr .global .align 8 define_c_param_0,
	.param .f64 define_c_param_1,
	.param .u32 define_c_param_2,
	.param .u32 define_c_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<16>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd1, [define_c_param_0];
	ld.param.f64 	%fd1, [define_c_param_1];
	ld.param.u32 	%r3, [define_c_param_2];
	ld.param.u32 	%r4, [define_c_param_3];
	mov.b32 	%r5, %envreg3;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r9, %r8, %r5;
	mad.lo.s32 	%r1, %r7, %r6, %r9;
	mov.u32 	%r10, %ctaid.y;
	mov.u32 	%r11, %ntid.y;
	mov.u32 	%r12, %tid.y;
	mov.b32 	%r13, %envreg4;
	add.s32 	%r14, %r12, %r13;
	mad.lo.s32 	%r2, %r11, %r10, %r14;
	setp.ge.s32 	%p1, %r1, %r3;
	setp.ge.s32 	%p2, %r2, %r4;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB1_2;

	mad.lo.s32 	%r15, %r2, %r3, %r1;
	mul.wide.s32 	%rd2, %r15, 8;
	add.s64 	%rd3, %rd1, %rd2;
	st.global.f64 	[%rd3], %fd1;

$L__BB1_2:
	ret;

}
	// .globl	define_initial_condition
.entry define_initial_condition(
	.param .u64 .ptr .global .align 8 define_initial_condition_param_0,
	.param .u32 define_initial_condition_param_1,
	.param .u32 define_initial_condition_param_2,
	.param .u32 define_initial_condition_param_3,
	.param .u32 define_initial_condition_param_4
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<37>;
	.reg .f64 	%fd<42>;
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd1, [define_initial_condition_param_0];
	ld.param.u32 	%r6, [define_initial_condition_param_1];
	ld.param.u32 	%r9, [define_initial_condition_param_2];
	ld.param.u32 	%r7, [define_initial_condition_param_3];
	ld.param.u32 	%r8, [define_initial_condition_param_4];
	mov.b32 	%r10, %envreg3;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %tid.x;
	add.s32 	%r14, %r13, %r10;
	mad.lo.s32 	%r1, %r12, %r11, %r14;
	mov.u32 	%r15, %ctaid.y;
	mov.u32 	%r16, %ntid.y;
	mov.u32 	%r17, %tid.y;
	mov.b32 	%r18, %envreg4;
	add.s32 	%r19, %r17, %r18;
	mad.lo.s32 	%r2, %r16, %r15, %r19;
	setp.ge.s32 	%p1, %r1, %r6;
	setp.ge.s32 	%p2, %r2, %r9;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB2_5;

	sub.s32 	%r20, %r1, %r7;
	mul.lo.s32 	%r21, %r20, %r20;
	sub.s32 	%r22, %r2, %r8;
	mad.lo.s32 	%r23, %r22, %r22, %r21;
	cvt.rn.f64.s32 	%fd6, %r23;
	mul.f64 	%fd1, %fd6, 0dBFC999999999999A;
	mov.f64 	%fd7, 0d4338000000000000;
	mov.f64 	%fd8, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd9, %fd1, %fd8, %fd7;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3, %temp}, %fd9;
	}
	mov.f64 	%fd10, 0dC338000000000000;
	add.rn.f64 	%fd11, %fd9, %fd10;
	mov.f64 	%fd12, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd13, %fd11, %fd12, %fd1;
	mov.f64 	%fd14, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd15, %fd11, %fd14, %fd13;
	mov.f64 	%fd16, 0d3E928AF3FCA213EA;
	mov.f64 	%fd17, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd18, %fd17, %fd15, %fd16;
	mov.f64 	%fd19, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd20, %fd18, %fd15, %fd19;
	mov.f64 	%fd21, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd22, %fd20, %fd15, %fd21;
	mov.f64 	%fd23, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd24, %fd22, %fd15, %fd23;
	mov.f64 	%fd25, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd26, %fd24, %fd15, %fd25;
	mov.f64 	%fd27, 0d3F81111111122322;
	fma.rn.f64 	%fd28, %fd26, %fd15, %fd27;
	mov.f64 	%fd29, 0d3FA55555555502A1;
	fma.rn.f64 	%fd30, %fd28, %fd15, %fd29;
	mov.f64 	%fd31, 0d3FC5555555555511;
	fma.rn.f64 	%fd32, %fd30, %fd15, %fd31;
	mov.f64 	%fd33, 0d3FE000000000000B;
	fma.rn.f64 	%fd34, %fd32, %fd15, %fd33;
	mov.f64 	%fd35, 0d3FF0000000000000;
	fma.rn.f64 	%fd36, %fd34, %fd15, %fd35;
	fma.rn.f64 	%fd37, %fd36, %fd15, %fd35;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4, %temp}, %fd37;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5}, %fd37;
	}
	shl.b32 	%r24, %r3, 20;
	add.s32 	%r25, %r5, %r24;
	mov.b64 	%fd41, {%r4, %r25};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r26}, %fd1;
	}
	mov.b32 	%f2, %r26;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p4, %f1, 0f4086232B;
	@%p4 bra 	$L__BB2_4;

	setp.lt.f64 	%p5, %fd1, 0d0000000000000000;
	add.f64 	%fd38, %fd1, 0d7FF0000000000000;
	selp.f64 	%fd41, 0d0000000000000000, %fd38, %p5;
	setp.geu.f32 	%p6, %f1, 0f40874800;
	@%p6 bra 	$L__BB2_4;

	shr.u32 	%r27, %r3, 31;
	add.s32 	%r28, %r3, %r27;
	shr.s32 	%r29, %r28, 1;
	shl.b32 	%r30, %r29, 20;
	add.s32 	%r31, %r5, %r30;
	mov.b64 	%fd39, {%r4, %r31};
	sub.s32 	%r32, %r3, %r29;
	shl.b32 	%r33, %r32, 20;
	add.s32 	%r34, %r33, 1072693248;
	mov.u32 	%r35, 0;
	mov.b64 	%fd40, {%r35, %r34};
	mul.f64 	%fd41, %fd39, %fd40;

$L__BB2_4:
	mad.lo.s32 	%r36, %r2, %r6, %r1;
	mul.wide.s32 	%rd2, %r36, 8;
	add.s64 	%rd3, %rd1, %rd2;
	st.global.f64 	[%rd3], %fd41;

$L__BB2_5:
	ret;

}
	// .globl	calculate_wave
.entry calculate_wave(
	.param .u64 .ptr .global .align 8 calculate_wave_param_0,
	.param .u64 .ptr .global .align 8 calculate_wave_param_1,
	.param .u64 .ptr .global .align 8 calculate_wave_param_2,
	.param .u64 .ptr .global .align 8 calculate_wave_param_3,
	.param .u32 calculate_wave_param_4,
	.param .u32 calculate_wave_param_5,
	.param .f64 calculate_wave_param_6,
	.param .f64 calculate_wave_param_7
)
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<24>;
	.reg .f64 	%fd<23>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [calculate_wave_param_0];
	ld.param.u64 	%rd2, [calculate_wave_param_1];
	ld.param.u64 	%rd3, [calculate_wave_param_2];
	ld.param.u64 	%rd4, [calculate_wave_param_3];
	ld.param.u32 	%r3, [calculate_wave_param_4];
	ld.param.u32 	%r4, [calculate_wave_param_5];
	ld.param.f64 	%fd1, [calculate_wave_param_6];
	ld.param.f64 	%fd2, [calculate_wave_param_7];
	mov.b32 	%r5, %envreg3;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r9, %r8, %r5;
	mad.lo.s32 	%r1, %r7, %r6, %r9;
	mov.u32 	%r10, %ctaid.y;
	mov.u32 	%r11, %ntid.y;
	mov.u32 	%r12, %tid.y;
	mov.b32 	%r13, %envreg4;
	add.s32 	%r14, %r12, %r13;
	mad.lo.s32 	%r2, %r11, %r10, %r14;
	setp.lt.s32 	%p1, %r1, 1;
	add.s32 	%r15, %r3, -1;
	setp.le.s32 	%p2, %r15, %r1;
	or.pred  	%p3, %p1, %p2;
	setp.lt.s32 	%p4, %r2, 1;
	or.pred  	%p5, %p4, %p3;
	add.s32 	%r16, %r4, -1;
	setp.le.s32 	%p6, %r16, %r2;
	or.pred  	%p7, %p6, %p5;
	@%p7 bra 	$L__BB3_2;

	mul.lo.s32 	%r17, %r2, %r3;
	add.s32 	%r18, %r17, %r1;
	mul.wide.s32 	%rd5, %r18, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f64 	%fd3, [%rd6];
	mul.f64 	%fd4, %fd3, %fd3;
	mul.f64 	%fd5, %fd4, %fd1;
	mul.f64 	%fd6, %fd5, %fd1;
	mul.f64 	%fd7, %fd2, %fd2;
	div.rn.f64 	%fd8, %fd6, %fd7;
	add.s64 	%rd7, %rd2, %rd5;
	add.s64 	%rd8, %rd3, %rd5;
	ld.global.f64 	%fd9, [%rd8];
	neg.f64 	%fd10, %fd9;
	ld.global.f64 	%fd11, [%rd7];
	fma.rn.f64 	%fd12, %fd11, 0d4000000000000000, %fd10;
	ld.global.f64 	%fd13, [%rd7+8];
	fma.rn.f64 	%fd14, %fd11, 0dC000000000000000, %fd13;
	ld.global.f64 	%fd15, [%rd7+-8];
	add.f64 	%fd16, %fd14, %fd15;
	add.s32 	%r19, %r17, %r3;
	add.s32 	%r20, %r19, %r1;
	mul.wide.s32 	%rd9, %r20, 8;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f64 	%fd17, [%rd10];
	add.f64 	%fd18, %fd16, %fd17;
	fma.rn.f64 	%fd19, %fd11, 0dC000000000000000, %fd18;
	shl.b32 	%r21, %r3, 1;
	sub.s32 	%r22, %r19, %r21;
	add.s32 	%r23, %r22, %r1;
	mul.wide.s32 	%rd11, %r23, 8;
	add.s64 	%rd12, %rd2, %rd11;
	ld.global.f64 	%fd20, [%rd12];
	add.f64 	%fd21, %fd19, %fd20;
	fma.rn.f64 	%fd22, %fd8, %fd21, %fd12;
	add.s64 	%rd13, %rd1, %rd5;
	st.global.f64 	[%rd13], %fd22;

$L__BB3_2:
	ret;

}

  